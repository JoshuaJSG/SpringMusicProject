{"ast":null,"code":"var _jsxFileName = \"/Users/joshuasteelegomes/Desktop/Java Projects/JSGApplication/src/main/java/com/JSG/JSGApplication/myproject/src/App.js\";\nimport React, { useState, Component } from 'react';\nimport axios from \"axios\";\nimport styled, { ThemeProvider } from 'styled-components';\nimport './App.css';\nimport Logo from './Logo';\nimport Button from './AppComponentCSS';\nimport { func } from 'prop-types';\nconst stripStyle = {\n  background: '#192a56',\n  padding: '1.5rem'\n};\nconst artistStrip = {\n  background: '#40739e',\n  padding: '1.5rem'\n};\n\nfunction createEmptyLine() {\n  const emptySpace = {\n    background: 'white',\n    padding: '0.5rem'\n  };\n} //adding a space after the header backround\n\n\nconst emptySpace = {\n  background: 'white',\n  padding: '0.1rem'\n};\nconst theme = {\n  font: 'sans-serif'\n};\nconst H1 = styled.h1`\n    font-family: ${props => props.theme.font};\n    color: white;\n`; //Style 1\n\nconst S1 = styled.h5`\n    font-family: ${props => props.theme.font};\n    color: white;\n`;\nconst api = axios.create({\n  baseURL: \"http://localhost:8080/artists/\"\n});\nconst logo = document.querySelectorAll(\"#logo path\");\n\nfor (let i = 0; i < logo.length; i++) {\n  console.log(`Letter ${i} is ${logo[i].getTotalLength()}`);\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      artists: [],\n      theArtistName: '',\n      id: ''\n    };\n\n    this.getArtists = async () => {\n      let data = await api.get(\"/\").then(({\n        data\n      }) => data);\n      this.setState({\n        artists: data\n      }); //setting our artists to be the data we fetch\n    };\n\n    this.createArtist = async () => {\n      this.getArtists();\n\n      if (!this.state.theArtistName == \"\") {\n        let response = await api.post('/', {\n          name: this.state.theArtistName\n        });\n        this.setState({\n          theArtistName: \"\"\n        });\n      }\n\n      return;\n    };\n\n    this.deleteArtist = async id => {\n      let data = await api.delete('/${id}');\n      this.getArtists();\n    };\n\n    this.handleArtistNameChange = this.handleArtistNameChange.bind(this);\n  } //calling this method will allow artist array to be populated everytime an event occurs, e.g POST, PUT, DELETE\n\n\n  deleteArtistById(artistIdNumber) {\n    {\n      if (window.confirm('Are you sure you want to delete this field')) {\n        axios.delete(\"http://localhost:8080/artists/\" + artistIdNumber).catch(err => console.error(err));\n      }\n    }\n  } //Once data is changed it is \"Mounted\" \n\n\n  componentDidMount() {\n    document.title = \"Artist Song Viewer\";\n    this.createArtist();\n  }\n\n  componentWillUpdate() {\n    this.getArtists();\n  } //This is called everytime the textbox is updated\n\n\n  handleArtistNameChange(event) {\n    this.setState({\n      theArtistName: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: stripStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(H1, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }, \"Artist Retrieval App\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"Text\",\n      placeholder: \"Enter Artist Name\",\n      name: \"theArtistName\",\n      value: this.state.theArtistName,\n      onChange: this.handleArtistNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.createArtist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, \"Add Artist\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: emptySpace,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: artistStrip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, this.state.artists.map(artist => /*#__PURE__*/React.createElement(S1, {\n      key: artist.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 59\n      }\n    }, /*#__PURE__*/React.createElement(H1, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 79\n      }\n    }, \"Artist Name: \", artist.name), /*#__PURE__*/React.createElement(S1, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    }, \"Songs: \", artist.songs)), /*#__PURE__*/React.createElement(H1, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }, artist.id), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.deleteArtistById(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }, \" Delete Artist\"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/joshuasteelegomes/Desktop/Java Projects/JSGApplication/src/main/java/com/JSG/JSGApplication/myproject/src/App.js"],"names":["React","useState","Component","axios","styled","ThemeProvider","Logo","Button","func","stripStyle","background","padding","artistStrip","createEmptyLine","emptySpace","theme","font","H1","h1","props","S1","h5","api","create","baseURL","logo","document","querySelectorAll","i","length","console","log","getTotalLength","App","constructor","state","artists","theArtistName","id","getArtists","data","get","then","setState","createArtist","response","post","name","deleteArtist","delete","handleArtistNameChange","bind","deleteArtistById","artistIdNumber","window","confirm","catch","err","error","componentDidMount","title","componentWillUpdate","event","target","value","render","map","artist","songs"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\nimport axios from \"axios\";\nimport styled, { ThemeProvider } from 'styled-components';\nimport './App.css';\nimport Logo from './Logo';\nimport Button from './AppComponentCSS';\nimport { func } from 'prop-types';\n\n\nconst stripStyle = {\n    background: '#192a56',\n    padding: '1.5rem'\n}\n\nconst artistStrip = {\n    background: '#40739e',\n    padding: '1.5rem',\n\n\n}\n\nfunction createEmptyLine() {\n    const emptySpace = {\n        background: 'white',\n        padding: '0.5rem'\n    }\n}\n\n//adding a space after the header backround\nconst emptySpace = {\n    background: 'white',\n    padding: '0.1rem'\n}\n\n\nconst theme = {\n    font: 'sans-serif'\n}\n\nconst H1 = styled.h1`\n    font-family: ${(props) => props.theme.font};\n    color: white;\n`\n\n//Style 1\n\nconst S1 = styled.h5`\n    font-family: ${(props) => props.theme.font};\n    color: white;\n`\n\nconst api = axios.create({\n    baseURL: \"http://localhost:8080/artists/\"\n});\n\n\nconst logo = document.querySelectorAll(\"#logo path\");\n\nfor (let i = 0; i < logo.length; i++) {\n    console.log(`Letter ${i} is ${logo[i].getTotalLength()}`);\n}\n\n\nclass App extends Component {\n\n\n    state = {\n        artists: [],\n        theArtistName: '',\n        id: '',\n    };\n\n    constructor(props) {\n        super(props);\n        this.handleArtistNameChange = this.handleArtistNameChange.bind(this);\n\n    }\n\n\n    //calling this method will allow artist array to be populated everytime an event occurs, e.g POST, PUT, DELETE\n    getArtists = async () => {\n        let data = await api.get(\"/\").then(({ data }) => data);\n        this.setState({ artists: data }) //setting our artists to be the data we fetch\n    }\n\n\n    createArtist = async () => {\n        this.getArtists()\n        if (!this.state.theArtistName == \"\") {\n            let response = await api.post('/', { name: this.state.theArtistName })\n            this.setState({ theArtistName: \"\" })\n        } return\n    }\n\n\n    deleteArtist = async (id) => {\n        let data = await api.delete('/${id}')\n        this.getArtists();\n    }\n\n\n    deleteArtistById(artistIdNumber) {\n        \n        {\n            if (window.confirm('Are you sure you want to delete this field')) {\n                axios.delete(\"http://localhost:8080/artists/\"+artistIdNumber)\n                    .catch(err => console.error(err));\n            }\n        }\n\n    }\n\n\n\n    //Once data is changed it is \"Mounted\" \n    componentDidMount() {\n        document.title = \"Artist Song Viewer\"\n        this.createArtist()\n\n    }\n\n    componentWillUpdate() {\n        this.getArtists()\n    }\n    //This is called everytime the textbox is updated\n    handleArtistNameChange(event) {\n        this.setState({ theArtistName: event.target.value });\n    }\n\n\n\n    render() {\n        return (\n            <>\n\n                <ThemeProvider theme={theme}>\n                    <Logo />\n                    <div className=\"App\">\n                        <div style={stripStyle}>\n                            <H1>Artist Retrieval App</H1>\n                            <input type='Text' placeholder=\"Enter Artist Name\" name=\"theArtistName\"\n                                value={this.state.theArtistName}\n                                onChange={this.handleArtistNameChange}>\n                            </input>\n                            <Button onClick={this.createArtist}>Add Artist</Button>\n                        </div>\n                        <div style={emptySpace}></div>\n                    </div>\n                    <div style={artistStrip}>\n                        {this.state.artists.map(artist => <S1 key={artist.id}><H1>Artist Name: {artist.name}</H1>\n                            <S1><div>Songs: {artist.songs}</div></S1>\n                            <H1>{artist.id}</H1>\n                            <Button onClick={() => this.deleteArtistById()}> Delete Artist</Button></S1>)}\n                    </div>\n                </ThemeProvider>\n            </>\n        )\n\n    }\n\n}\n\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}